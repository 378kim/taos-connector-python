name: Test on macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup coreutils
        run: brew install coreutils

      - name: Setup geos
        run: brew install geos

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Set up Go
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Determine TDengine branch
        uses: haya14busa/action-cond@v1
        id: determine-branch
        with:
          cond: ${{ github.base_ref == 'main' }}
          if_true: 'ver-3.2.2.1'
          if_false: '3.0'

      - name: Checkout tdengine
        uses: actions/checkout@v2
        with:
          repository: "taosdata/TDengine"
          path: "TDengine"
          ref: ${{ steps.determine-branch.outputs.value }}

      - name: Build TDengine
        run: |
          cd TDengine
          mkdir build
          cd build
          cmake ../ -DBUILD_HTTP=false
          make -j4 && make install
          cd ../../

      - name: Copy taos.cfg
        run: |
          sudo mkdir -p /etc/taos
          sudo cp ./.github/workflows/taos.cfg /etc/taos/taos.cfg

      - name: Start TDengine
        run: |
          export C_INCLUDE_PATH=$PWD/TDengine/build/build/include
          export LD_LIBRARY_PATH=$PWD/TDengine/build/build/lib
          
          mkdir -p /tmp/taos/v3/log /tmp/taos/v3/data
          printf "dataDir /tmp/taos/v3/data\nlogDir /tmp/taos/v3/log\ndebugFlag 135\n" |sudo tee /etc/taos/taos.cfg

          TAOS_SUPPORT_VNODES=256 taosd &
          taosadapter &
          
          sleep 1

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.poetry
          key: macos-poetry

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
  test:
    runs-on: macos-12
    needs: build
    steps:
      - name: Test
        run: |
          export LD_LIBRARY_PATH=$PWD/TDengine/build/build/lib
          source $VENV
          export TDENGINE_URL=localhost:6041
          poetry run pip install psutil pandas
          poetry run pytest tests

      - name: Build Artifacts
        run: |
          poetry build
